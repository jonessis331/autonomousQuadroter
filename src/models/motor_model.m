function [F_motor,M_motor,rpm_motor_dot] = motor_model(F,M,motor_rpm,params)

% Input parameters
% 
%   F,M: required force and moment
%
%   motor_rpm: current motor RPM
%
%   params: Quadcopter parameters
%
% Output parameters
%
%   F_motor: Actual thrust generated by Quadcopter's Motors
%
%   M_motor: Actual Moment generated by the Quadcopter's Motors
%
%   rpm_dot: Derivative of the RPM
%
%************ MOTOR MODEL ************************

% Write code here

ct = params.thrust_coefficient;
cq = params.moment_scale;
d = params.arm_length;
rpm = motor_rpm; 

% Transformation matrix A
A = [ct, ct, ct, ct;
     0, d*ct, 0, -d*ct;
     -d*ct, 0, d*ct, 0;
     -cq, cq, -cq, cq];

wsquared = inv(A) * [F; M(1); M(2); M(3)];
rpmd = max(min(wsquared, params.rpm_max^2), params.rpm_min^2);
rpm_des = sqrt(rpmd);

rpm = min(max(rpm, params.rpm_min), params.rpm_max);

moments = A * (rpm.^2);
F_motor = moments(1);
M_motor = moments(2:end);

rpm_motor_dot = params.motor_constant * (rpm_des - rpm);


end
